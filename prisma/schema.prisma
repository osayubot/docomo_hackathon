// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model User {
//    id        Int      @id @unique @default(autoincrement())
//    createdAt DateTime @default(now())
//    updatedAt DateTime @updatedAt
//    isAdmin   Boolean @default(false)
//}

enum Gender {
  MALE
  FEMALE
  OTHER
}
model Users {
  id        Int      @id @unique @default(autoincrement())
  name      String   @db.VarChar(256)
  age       Int
  gender    Gender
  birth     DateTime
  email     String  @db.VarChar(256) @unique
  password  String  @db.VarChar(256)
  orders    Orders[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Items {
  id        Int      @id @unique @default(autoincrement())
  name      String   @db.VarChar(256)
  category  String   @db.VarChar(128)
  url       String   @db.VarChar(512)
  imageUrl  String   @db.VarChar(512)
  initialPrice　Decimal?  @db.Decimal(10, 0)
  monthlyPrice  Decimal  @db.Decimal(10, 0)
  overview  String   @db.Text
  detail    String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// orderのステータス管理はisreturnedだけでいい？
// userIdとitemIdはrelationを宣言する必要ある？
model Orders {
  id        Int      @id @unique @default(autoincrement())
  userId    Int
  itemId    Int
  orderAt   DateTime
  returnedAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      Users     @relation(fields: [userId], references: [id])
}
